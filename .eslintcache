[{"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/index.js":"1","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/App.js":"2","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/reportWebVitals.js":"3","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/loginForm/LoginForm.js":"4","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/signupForm/SignupForm.js":"5","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/home/Home.js":"6","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/navbar/Navbar.js":"7","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/homepageHeading/HomepageHeading.js":"8","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/inventory/Inventory.js":"9","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cart/Cart.js":"10","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/products/Products.js":"11","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/testData.js":"12","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cardItem/CardItem.js":"13","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/hooks/useFormFields.js":"14","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/api/index.js":"15","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/index.js":"16","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/type.js":"17","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/App.js":"18","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/dashboard/Dashboard.js":"19","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Products.js":"20"},{"size":708,"mtime":1610749408907,"results":"21","hashOfConfig":"22"},{"size":4200,"mtime":1610756230274,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610497545371,"results":"24","hashOfConfig":"22"},{"size":2773,"mtime":1610755323651,"results":"25","hashOfConfig":"22"},{"size":3450,"mtime":1610768386518,"results":"26","hashOfConfig":"22"},{"size":1185,"mtime":1610754806281,"results":"27","hashOfConfig":"22"},{"size":2909,"mtime":1610754370870,"results":"28","hashOfConfig":"22"},{"size":1062,"mtime":1610754766316,"results":"29","hashOfConfig":"22"},{"size":4420,"mtime":1610779404417,"results":"30","hashOfConfig":"22"},{"size":192,"mtime":1610597993354,"results":"31","hashOfConfig":"22"},{"size":937,"mtime":1610768455217,"results":"32","hashOfConfig":"22"},{"size":1982,"mtime":1610756468109,"results":"33","hashOfConfig":"22"},{"size":2754,"mtime":1610759653882,"results":"34","hashOfConfig":"22"},{"size":278,"mtime":1610667840748,"results":"35","hashOfConfig":"22"},{"size":1011,"mtime":1610774413987,"results":"36","hashOfConfig":"22"},{"size":236,"mtime":1610756331902,"results":"37","hashOfConfig":"22"},{"size":175,"mtime":1610756056467,"results":"38","hashOfConfig":"22"},{"size":321,"mtime":1610749475743,"results":"39","hashOfConfig":"22"},{"size":258,"mtime":1610755095063,"results":"40","hashOfConfig":"22"},{"size":324,"mtime":1610756058715,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11axhxi",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/index.js",[],["90","91"],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/App.js",["92","93"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport Inventory from './components/inventory/Inventory';\nimport Cart from './components/cart/Cart';\nimport Products from './components/products/Products';\nimport Home from './components/home/Home';\nimport LoginForm from './components/loginForm/LoginForm';\nimport SignupForm from './components/signupForm/SignupForm';\nimport Navbar from './components/navbar/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { LOGGED_IN, SET_PRODUCTS } from './store/type';\nimport { autologin, getProducts } from './api'\nimport { Header, Message, List } from 'semantic-ui-react';\nimport './styles/App.scss';\n\nconst App = () => {\n\n  const [ welcomeMessage, setWelcomeMessage ] = useState(\"\");\n  const [ alertStatus, setAlertStatus ] = useState(false)\n  const [ fixed, setFixed ] = useState(false)\n  const [ header, setHeader ] = useState(\"\");\n  const [ errorMsg, setErrorMsg ] = useState([]);\n  const currentUser = useSelector(state => state.app.currentUser)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (localStorage.token) {\n      autologin(localStorage.token)\n      .then(data => {\n        if (!data.error) {\n          dispatch({ type: LOGGED_IN, payload: data.user })\n        }\n      })\n    }\n  },[])\n\n  useEffect(() => {\n    getProducts(localStorage.token)\n    .then(products => {\n      dispatch({ type: SET_PRODUCTS, payload: products })\n    })\n  },[])\n\n\n  const displayAlert = errors => {\n    return errors.map((e, i) => (\n      <List.Item key={e}>{e}</List.Item>\n    ));\n  }\n\n  const credentialsAlert = () => {\n    return <Message warning attached='bottom'>\n      { \n        alertStatus && \n        <div>\n          <Header as='h5' dividing>\n            {header}\n          </Header>\n          <List bulleted style={{ textAlign: \"left\" }}>\n            { displayAlert(errorMsg) }\n          </List>\n        </div>\n      }\n    </Message>\n  }\n\n  const runAlert = (header, error) => {\n    setHeader(header);\n    setErrorMsg(error);\n    setAlertStatus(true);\n    resetAlert();\n  }\n\n  const resetAlert = () => {\n    setTimeout(() => {\n      setAlertStatus(false);\n    }, 5000);\n  }\n\n  const handleDismiss = () => {\n    setAlertStatus(false);\n  }\n\n  const handleCredentialsTasks = (message) => {\n    setWelcomeMessage(message);\n    setAlertStatus(true);\n    resetAlert();\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar fixed={fixed} />\n      { (currentUser && alertStatus) &&\n        <Message attached='bottom' size=\"huge\" onDismiss={handleDismiss}>\n          <Message.Content>\n            <Message.Header>{welcomeMessage}</Message.Header>\n          </Message.Content>\n        </Message>\n      }\n      <Switch>\n        {\n          currentUser &&\n          <React.Fragment>\n            <Route path=\"/dashboard\" render={ () => <Dashboard /> } />\n            <Route path=\"/inventory\" render={ () => <Inventory /> } />\n            <Route path=\"/products\" exact render={ () => <Products/> } />\n            <Route path=\"/cart\" exact render={ () => <Cart/> } />\n          </React.Fragment>\n        }\n        <Route path=\"/\" exact render={ () => <Home setFixed={setFixed}/> } />\n        <Route path=\"/products\" exact render={ () => <Products/> } />\n        <Route path=\"/login\" render={ () => <LoginForm \n                                                handleCredentialsTasks={handleCredentialsTasks} \n                                                runAlert={runAlert}\n                                                credentialsAlert={credentialsAlert}\n                                                alertStatus={alertStatus}/> } />\n        <Route path=\"/signup\" render={ () => <SignupForm \n                                                handleCredentialsTasks={handleCredentialsTasks}\n                                                runAlert={runAlert}\n                                                credentialsAlert={credentialsAlert}\n                                                alertStatus={alertStatus} /> } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/reportWebVitals.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/loginForm/LoginForm.js",["94","95"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport useFormFields from '../../hooks/useFormFields';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons'\nimport { loginUser } from '../../api';\nimport { LOGGED_IN } from '../../store/type';\nimport './Styles.scss';\n\nconst LoginForm = ({ history, handleCredentialsTasks, runAlert, credentialsAlert, alertStatus }) => {\n\n  const iconDoor = <FontAwesomeIcon icon={faDoorOpen} size=\"2x\" />\n  const dispatch = useDispatch() \n  const [ fields, handleFields ] = useFormFields({\n    email: \"\",\n    password: \"\"\n  })\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    loginUser(fields)\n    .then(data => {\n      if (data.error) {\n        const { error, header } = data;\n        console.log(\"error ==>\", error)\n        runAlert(header, error);\n      } else {\n        const { user, token, success } = data;\n        localStorage.token = token;\n        dispatch({ type: LOGGED_IN, payload: user });\n        handleCredentialsTasks(success);\n        history.push(\"/dashboard\");\n      }\n    })\n  }\n\n  return (\n    <Segment\n      className=\"loginForm\"\n      textAlign='center'\n      inverted\n      style={{ minHeight: 700,  padding: '1em 0em' }}\n      vertical\n      >\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' className=\"loginForm__header\" textAlign='center'>\n            {iconDoor} Enter your store\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input \n                name=\"email\"\n                fluid \n                icon='user' \n                iconPosition='left' \n                placeholder='E-mail address' \n                onChange={handleFields}\n              />\n              <Form.Input\n                name=\"password\"\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                onChange={handleFields}\n              />\n\n              <Button color='blue' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          {alertStatus && credentialsAlert()}\n          <Message>\n            Don't have a store yet? <Link to=\"/signup\">Sign Up</Link> or return <Link to=\"/\">Home</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\nexport default withRouter(LoginForm);","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/signupForm/SignupForm.js",["96","97"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport useFormFields from '../../hooks/useFormFields';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStoreAlt } from '@fortawesome/free-solid-svg-icons'\nimport { signup } from '../../api'\nimport { LOGGED_IN } from '../../store/type';\nimport './Styles.scss';\n\n  const SingupForm = ({ history, handleCredentialsTasks, runAlert, credentialsAlert, alertStatus }) => {\n\n  const iconStore = <FontAwesomeIcon icon={faStoreAlt} size=\"2x\" />\n  const dispatch = useDispatch()\n  const [ fields, handleFields ] = useFormFields({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    const formatData = {\n      first_name: fields.firstName,\n      last_name: fields.lastName,\n      email: fields.email,\n      password: fields.password\n    }\n\n    signup(formatData).then(data => {\n      if (data.error) {\n        const { error, header } = data;\n        runAlert(header, error);\n      } else {\n        const { user, token, success } = data;\n        localStorage.token = token;\n        dispatch({ type: LOGGED_IN, payload: user });\n        handleCredentialsTasks(success);\n        history.push(\"/dashboard\");\n      }\n    })\n  }\n\n  return (\n    <Segment\n      className=\"SingupForm\"\n      textAlign='center'\n      inverted\n      style={{ minHeight: 700,  padding: '1em 0em' }}\n      vertical\n    >\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' className=\"loginForm__header\" textAlign='center'>\n            {iconStore} Create your store\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input \n                name=\"firstName\"\n                fluid \n                icon='hand point right' \n                iconPosition='left' \n                placeholder='First Name' \n                onChange={handleFields}\n                />\n              <Form.Input \n                name=\"lastName\"\n                fluid \n                icon='hand point right' \n                iconPosition='left' \n                placeholder='Last Name' \n                onChange={handleFields}\n                />\n              <Form.Input \n                name=\"email\"\n                fluid \n                icon='mail' \n                iconPosition='left' \n                placeholder='E-mail address' \n                onChange={handleFields}\n                />\n              <Form.Input\n                name=\"password\"\n                type='password'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                onChange={handleFields}\n              />\n\n              <Button color='blue' fluid size='large'>\n                Sign up\n              </Button>\n            </Segment>\n          </Form>\n            {alertStatus && credentialsAlert()}\n          <Message>\n            Already a user? <Link to=\"/login\">Log in</Link> or return <Link to=\"/\">Home</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\nexport default withRouter(SingupForm);","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/home/Home.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/navbar/Navbar.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/homepageHeading/HomepageHeading.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/inventory/Inventory.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cart/Cart.js",["98"],"import React, { useState } from 'react';\n\nimport './Styles.scss';\n\nconst Cart = () => {\n    return (\n      <div className=\"cart\">\n        <h1>Cart</h1>\n      </div>\n  )\n}\n\nexport default Cart;","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/products/Products.js",["99"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Grid, Form } from 'semantic-ui-react';\nimport CardItem from '../cardItem/CardItem';\n\nimport './Styles.scss';\n\nconst Product = () => {\n\n  const currentUser = useSelector(state => state.app.currentUser);\n  const products = useSelector(state => state.product.products);\n\n  const displayInventory = () => {\n    return products.map(item => (\n      <CardItem key={item.id} item={item} currentUser={currentUser}/>\n    ))\n  }\n\n    return (\n      <Container className=\"inventory\">\n        <h1 style={{textAlign: \"center\"}}>Products</h1>\n        <Form className=\"inventory__searchInput\">\n          <Form.Input  \n            placeholder=\"Search for an item\"/>\n        </Form>\n        <Grid>\n          <Grid.Row columns={4}>\n            {displayInventory()}\n          </Grid.Row>\n        </Grid>\n      </Container>\n  )\n}\n\nexport default Product;","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/testData.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cardItem/CardItem.js",["100","101"],"import React, { useState } from 'react';\nimport { Modal, Header, Grid, Image, Card, Icon, Button } from 'semantic-ui-react'\n\nimport './Styles.scss';\n\nconst CardItem = ({ item, currentUser }) => {\n\n  const [ open, setOpen ] = useState(false);\n\n    return (\n\n      <Grid.Column className=\"cardItem\" id=\"cardContainer\">\n        <Card className=\"cardItem__card\">\n          <div  role=\"img\" \n                aria-label={item.title}\n                title={item.title}\n                className=\"cardItem__image\" \n                style={{backgroundImage: `url(${item.image_url})` }} />\n          <Card.Content>\n            <Card.Header>{item.name}</Card.Header>\n            <Card.Description>\n              Price: ${item.price}\n            </Card.Description>\n            <Card.Description>\n              Qty: 2\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a floated='left'>\n              <Icon name='user' />\n              {item.user.first_name} {item.user.last_name}\n            </a>\n            <Button floated='right' color=\"blue\" icon>\n              <Icon name='shopping cart' />\n            </Button>\n          </Card.Content>\n          {\n            false &&\n            <Card.Content textAlign='center' extra>\n              <Modal\n                closeIcon\n                size=\"mini\"\n                dimmer={\"inverted\"}\n                open={open}\n                trigger={\n                  <Button inverted color=\"red\" icon>\n                    <Icon name='trash' />\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header icon='archive' content='Archive Old Messages' />\n                <Modal.Content>\n                  <p>\n                    Are you sure you want to delete this item?\n                  </p>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button color='red' onClick={() => setOpen(false)}>\n                    <Icon name='remove' /> No\n                  </Button>\n                  <Button color='green' onClick={() => setOpen(false)}>\n                    <Icon name='checkmark' /> Yes\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <Button inverted color=\"green\" icon>\n                <Icon name='edit' />\n              </Button>\n              <Button inverted color=\"blue\" icon>\n                <Icon name='add' />\n              </Button>\n              <Button inverted color=\"orange\" icon>\n                <Icon name='minus' />\n              </Button>\n            </Card.Content>\n          }\n        </Card>\n      </Grid.Column>\n  )\n}\n\nexport default CardItem;","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/hooks/useFormFields.js",["102"],"import { useState } from 'react';\n\nexport default initialState => {\n  const [ fields, setValues ] = useState(initialState);\n\n  return [\n    fields, \n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.name]: event.target.value\n      });\n    }\n  ];\n}","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/api/index.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/index.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/type.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/App.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/dashboard/Dashboard.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Products.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":38,"column":5,"nodeType":"109","endLine":38,"endColumn":7,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":45,"column":5,"nodeType":"109","endLine":45,"endColumn":7,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":2,"column":31,"nodeType":"114","messageId":"115","endLine":2,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":29,"column":13,"nodeType":"120","endLine":29,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":3,"column":1,"nodeType":"123","endLine":15,"endColumn":2},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["126"],["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},{"range":"133","text":"132"},[1424,1426],"[dispatch]",[1578,1580]]
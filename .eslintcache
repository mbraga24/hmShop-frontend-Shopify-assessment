[{"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/index.js":"1","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/App.js":"2","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/reportWebVitals.js":"3","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/loginForm/LoginForm.js":"4","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/signupForm/SignupForm.js":"5","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/home/Home.js":"6","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/navbar/Navbar.js":"7","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/homepageHeading/HomepageHeading.js":"8","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/inventory/Inventory.js":"9","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cart/Cart.js":"10","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/products/Products.js":"11","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/testData.js":"12","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cardItem/CardItem.js":"13","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/hooks/useFormFields.js":"14","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/api/index.js":"15","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/index.js":"16","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/type.js":"17","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/App.js":"18","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/dashboard/Dashboard.js":"19","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Products.js":"20","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/productForm/ProductForm.js":"21","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Orders.js":"22","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/orderItem/OrderItem.js":"23"},{"size":708,"mtime":1610779885667,"results":"24","hashOfConfig":"25"},{"size":4401,"mtime":1610866694935,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1610497545371,"results":"27","hashOfConfig":"25"},{"size":2836,"mtime":1610864492958,"results":"28","hashOfConfig":"25"},{"size":3513,"mtime":1610864467853,"results":"29","hashOfConfig":"25"},{"size":1185,"mtime":1610779885662,"results":"30","hashOfConfig":"25"},{"size":3257,"mtime":1610866199946,"results":"31","hashOfConfig":"25"},{"size":1062,"mtime":1610779885663,"results":"32","hashOfConfig":"25"},{"size":1944,"mtime":1610865443030,"results":"33","hashOfConfig":"25"},{"size":875,"mtime":1610868704631,"results":"34","hashOfConfig":"25"},{"size":1452,"mtime":1610868025617,"results":"35","hashOfConfig":"25"},{"size":1982,"mtime":1610756468109,"results":"36","hashOfConfig":"25"},{"size":3573,"mtime":1610867577050,"results":"37","hashOfConfig":"25"},{"size":278,"mtime":1610667840748,"results":"38","hashOfConfig":"25"},{"size":1642,"mtime":1610866659316,"results":"39","hashOfConfig":"25"},{"size":275,"mtime":1610865708982,"results":"40","hashOfConfig":"25"},{"size":436,"mtime":1610865521042,"results":"41","hashOfConfig":"25"},{"size":457,"mtime":1610864378286,"results":"42","hashOfConfig":"25"},{"size":1188,"mtime":1610865172007,"results":"43","hashOfConfig":"25"},{"size":711,"mtime":1610864147276,"results":"44","hashOfConfig":"25"},{"size":3962,"mtime":1610861154745,"results":"45","hashOfConfig":"25"},{"size":444,"mtime":1610865732928,"results":"46","hashOfConfig":"25"},{"size":3715,"mtime":1610869333760,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11axhxi",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/index.js",[],["102","103"],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/App.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/reportWebVitals.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/loginForm/LoginForm.js",["104","105"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport useFormFields from '../../hooks/useFormFields';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons'\nimport { loginUser } from '../../api';\nimport { LOGGED_IN, SET_BANNER } from '../../store/type';\nimport './Styles.scss';\n\nconst LoginForm = ({ history, handleCredentialsTasks, runAlert, credentialsAlert, alertStatus }) => {\n\n  const iconDoor = <FontAwesomeIcon icon={faDoorOpen} size=\"2x\" />\n  const dispatch = useDispatch() \n  const [ fields, handleFields ] = useFormFields({\n    email: \"\",\n    password: \"\"\n  })\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    loginUser(fields)\n    .then(data => {\n      if (data.error) {\n        const { error, header } = data;\n        console.log(\"error ==>\", error)\n        runAlert(header, error);\n      } else {\n        const { user, token, success } = data;\n        localStorage.token = token;\n        dispatch({ type: LOGGED_IN, payload: user });\n        dispatch({ type: SET_BANNER, payload: success });\n        handleCredentialsTasks();\n        history.push(\"/dashboard\");\n      }\n    })\n  }\n\n  return (\n    <Segment\n      className=\"loginForm\"\n      textAlign='center'\n      inverted\n      style={{ minHeight: 700,  padding: '1em 0em' }}\n      vertical\n      >\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' className=\"loginForm__header\" textAlign='center'>\n            {iconDoor} Enter your store\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input \n                name=\"email\"\n                fluid \n                icon='user' \n                iconPosition='left' \n                placeholder='E-mail address' \n                onChange={handleFields}\n              />\n              <Form.Input\n                name=\"password\"\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                onChange={handleFields}\n              />\n\n              <Button color='blue' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          {alertStatus && credentialsAlert()}\n          <Message>\n            Don't have a store yet? <Link to=\"/signup\">Sign Up</Link> or return <Link to=\"/\">Home</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\nexport default withRouter(LoginForm);","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/signupForm/SignupForm.js",["106","107"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport useFormFields from '../../hooks/useFormFields';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStoreAlt } from '@fortawesome/free-solid-svg-icons'\nimport { signup } from '../../api'\nimport { LOGGED_IN, SET_BANNER } from '../../store/type';\nimport './Styles.scss';\n\n  const SingupForm = ({ history, handleCredentialsTasks, runAlert, credentialsAlert, alertStatus }) => {\n\n  const iconStore = <FontAwesomeIcon icon={faStoreAlt} size=\"2x\" />\n  const dispatch = useDispatch()\n  const [ fields, handleFields ] = useFormFields({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    const formatData = {\n      first_name: fields.firstName,\n      last_name: fields.lastName,\n      email: fields.email,\n      password: fields.password\n    }\n\n    signup(formatData).then(data => {\n      if (data.error) {\n        const { error, header } = data;\n        runAlert(header, error);\n      } else {\n        const { user, token, success } = data;\n        localStorage.token = token;\n        dispatch({ type: LOGGED_IN, payload: user });\n        dispatch({ type: SET_BANNER, payload: success });\n        handleCredentialsTasks();\n        history.push(\"/dashboard\");\n      }\n    })\n  }\n\n  return (\n    <Segment\n      className=\"SingupForm\"\n      textAlign='center'\n      inverted\n      style={{ minHeight: 700,  padding: '1em 0em' }}\n      vertical\n    >\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' className=\"loginForm__header\" textAlign='center'>\n            {iconStore} Create your store\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input \n                name=\"firstName\"\n                fluid \n                icon='hand point right' \n                iconPosition='left' \n                placeholder='First Name' \n                onChange={handleFields}\n                />\n              <Form.Input \n                name=\"lastName\"\n                fluid \n                icon='hand point right' \n                iconPosition='left' \n                placeholder='Last Name' \n                onChange={handleFields}\n                />\n              <Form.Input \n                name=\"email\"\n                fluid \n                icon='mail' \n                iconPosition='left' \n                placeholder='E-mail address' \n                onChange={handleFields}\n                />\n              <Form.Input\n                name=\"password\"\n                type='password'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                onChange={handleFields}\n              />\n\n              <Button color='blue' fluid size='large'>\n                Sign up\n              </Button>\n            </Segment>\n          </Form>\n            {alertStatus && credentialsAlert()}\n          <Message>\n            Already a user? <Link to=\"/login\">Log in</Link> or return <Link to=\"/\">Home</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\nexport default withRouter(SingupForm);","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/home/Home.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/navbar/Navbar.js",["108"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Menu, Container, Icon } from 'semantic-ui-react';\n\nimport { LOGGED_IN } from '../../store/type';\nimport './Styles.scss';\n\nconst Navbar = ({ history, fixed }) => {\n  \n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => state.app.currentUser);\n  const orders = useSelector(state => state.order.orders);\n  let activeRole;\n  let itemsPlurarization;\n\n  useEffect(() => {\n    itemsPlurarization = orders.length > 1 ? \"Items\" : \"Item\";\n  }, [itemsPlurarization])\n\n  const handleLogout = () => {\n    dispatch({ type: LOGGED_IN, payload: null });\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  }\n\n  if (currentUser) {\n    activeRole = true\n  } else {\n    activeRole = false\n  }\n\n  const [ activeItem, setActiveItem ] = useState('')\n\n  const handleItemClick = (e, { name }) => { setActiveItem(name) }\n\n  return (\n\n    <Menu\n      fixed={fixed ? 'top' : null}\n      inverted={!activeRole}\n      pointing={!fixed}\n      secondary={!fixed}\n      className={`${activeRole ? \"activeUser\" : \"inactiveUser\" } navbar`}\n      size='large'\n    >\n      <Container>\n        <>\n          <Menu.Item \n            as={Link} \n            to={currentUser ? \"/dashboard\" : \"/\"}\n            name={currentUser ? \"dashboard\" : \"home\"}\n            active={activeItem === (currentUser ? \"dashboard\" : \"home\")}\n            onClick={handleItemClick}>{currentUser ? \"Dashboard\" : \"Home\"}</Menu.Item>\n        </>\n\n        {\n          activeRole && \n          <>\n          <Menu.Item \n              as={Link}\n              to=\"/products\"\n              name=\"products\"\n              active={activeItem === 'products'}\n              onClick={handleItemClick}>Products</Menu.Item> {/* The MAY or MAY NOT have access to all products */}\n              \n            <Menu.Item \n              as={Link}\n              to=\"/inventory\"\n              name=\"inventory\"\n              active={activeItem === 'inventory'}\n              onClick={handleItemClick}>Inventory</Menu.Item> {/* The user has an inventory they're selling */}\n          </>\n        }\n        <Menu.Item position='right'>\n          {\n            !activeRole ?\n            <Button as={Link} to=\"/login\" inverted={!activeRole} primary={activeRole}>\n              Log in\n            </Button> :\n            <Button as={Link} to=\"/cart\" animated='vertical' inverted secondary={true}>\n              <Button.Content hidden>{orders.length} {itemsPlurarization}</Button.Content>\n              <Button.Content visible>\n                <Icon name='shop' />\n              </Button.Content>\n            </Button>\n          }\n            <Button \n              as={Link} \n              to={`${activeRole ? \"/\" : \"/signup\"}`} \n              color={`${activeRole ? \"purple\" : null}`} \n              inverted={true} \n              secondary={activeRole}\n              onClick={activeRole ? handleLogout : null}\n              className=\"navbar__multifunctionBtn\"> \n                {activeRole ? \"Log out\" : \"Sign Up\"}\n              </Button>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\nexport default withRouter(Navbar);","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/homepageHeading/HomepageHeading.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/inventory/Inventory.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cart/Cart.js",["109"],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/products/Products.js",["110"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Grid, Form } from 'semantic-ui-react';\nimport CardItem from '../cardItem/CardItem';\nimport { queryProducts } from '../../api';\n\nimport './Styles.scss';\n\nconst Product = () => {\n\n  const [ searchTerm, setSearchTerm ] = useState(\"\")\n  const [ searchProducts, setSearchProducts ] = useState([])\n  const currentUser = useSelector(state => state.app.currentUser);\n  const products = useSelector(state => state.product.products);\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value)\n  }\n\n  useEffect(() => {\n    setSearchProducts(products)\n  }, [])\n\n  useEffect(() => {\n    let type = 'name'\n    queryProducts(type, searchTerm)\n    .then(data => setSearchProducts(data))\n  }, [searchTerm])\n\n  const displayInventory = () => {\n    return searchProducts.map(item => (\n      <CardItem key={`${item.name}-${item.id}`} item={item} currentUser={currentUser}/>\n    ))\n  }\n\n    return (\n      <Container className=\"inventory\">\n        <h1 style={{textAlign: \"center\"}}>Products</h1>\n        <Form className=\"inventory__searchInput\">\n          <Form.Input  \n            placeholder=\"Search for an item\"\n            onChange={handleChange}\n            />\n        </Form>\n        <Grid>\n          <Grid.Row columns={4}>\n            {displayInventory()}\n          </Grid.Row>\n        </Grid>\n      </Container>\n  )\n}\n\nexport default Product;","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/testData.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/cardItem/CardItem.js",["111"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal, Header, Grid, Card, Icon, Button } from 'semantic-ui-react'\n\nimport { deleteProduct } from '../../api';\nimport { REMOVE_PRODUCT, SET_BANNER } from '../../store/type';\nimport './Styles.scss';\n\nconst CardItem = ({ item, currentUser }) => {\n\n  const [ open, setOpen ] = useState(false);\n  const [ loader, setLoader ] = useState(false);\n  const dispatch = useDispatch()\n\n  const handleDelete = () => {\n    setLoader(true)\n    deleteProduct(item.id, localStorage.token)\n    .then(data => {\n      setTimeout(() => {\n        dispatch({ type: REMOVE_PRODUCT, payload: data.product })\n        dispatch({ type: SET_BANNER, payload: data.confirmation });\n        setOpen(false)\n        setLoader(false)\n      }, [2000])\n    })\n  }\n\n  const isSeller = () => {\n    return item.user.email === currentUser.email\n  }\n\n    return (\n\n      <Grid.Column className=\"cardItem\" id=\"cardContainer\">\n        <Card className=\"cardItem__card\">\n          <div  role=\"img\" \n                aria-label={item.name}\n                title={item.name}\n                className=\"cardItem__image\" \n                style={{backgroundImage: `url(${item.image_url})` }} />\n          <Card.Content>\n            <Card.Header>{item.name}</Card.Header>\n            <Card.Description>\n              Price: ${item.price}\n            </Card.Description>\n            <Card.Description>\n              Qty: 2\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a floated='left'>\n              <Icon name='user' />\n              {item.user.first_name} {item.user.last_name}\n            </a>\n            { !isSeller() &&\n              <Button floated='right' color=\"blue\" icon>\n                <Icon name='shopping cart' />\n              </Button>\n            }\n          </Card.Content>\n          {\n            currentUser && isSeller() && \n            <Card.Content textAlign='center' extra>\n              <Modal\n                closeIcon\n                size=\"mini\"\n                dimmer={\"inverted\"}\n                open={open}\n                trigger={\n                  <Button inverted color=\"red\" icon>\n                    <Icon name='trash' />\n                  </Button>\n                }\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n              >\n                <Header icon='trash' content='Please confirm' />\n                <Modal.Content>\n                  <p>\n                    Are you sure you want to delete this product?\n                  </p>\n                </Modal.Content>\n                <Modal.Actions>\n                  {\n                  !loader && \n                  <Button color='red' onClick={() => setOpen(false)}>\n                    <Icon name='remove' /> No\n                  </Button>\n                  }\n                  <Button color='green' loading={loader} onClick={handleDelete}>\n                    <Icon name='checkmark' /> Yes\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <Button inverted color=\"green\" icon>\n                <Icon name='edit' />\n              </Button>\n              <Button inverted disabled color=\"blue\" icon>\n                <Icon name='add' />\n              </Button>\n              <Button inverted disabled color=\"orange\" icon>\n                <Icon name='minus' />\n              </Button>\n            </Card.Content>\n          }\n        </Card>\n      </Grid.Column>\n  )\n}\n\nexport default CardItem;","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/hooks/useFormFields.js",["112"],"import { useState } from 'react';\n\nexport default initialState => {\n  const [ fields, setValues ] = useState(initialState);\n\n  return [\n    fields, \n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.name]: event.target.value\n      });\n    }\n  ];\n}","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/api/index.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/index.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/type.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/App.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/dashboard/Dashboard.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Products.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/productForm/ProductForm.js",["113"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Image, Form, Button, Card, Placeholder } from 'semantic-ui-react'\nimport useFormFields from '../../hooks/useFormFields';\n\nimport { ADD_PRODUCT } from '../../store/type';\nimport { newProduct } from '../../api';\nimport './Styles.scss';\n\nconst ProductForm = ({ formNumber, click }) => {\n\n  let disableName;\n  const dispatch = useDispatch()\n  const [ imageLoader, setImageLoader ] = useState(false)\n  const [ placeholder, setPlaceholder ] = useState(null)\n  const [ file, setFile ] = useState(null)\n  const [ fileName, setFileName ] = useState(\"\")\n  const [ fields, handleFieldChange ] = useFormFields({\n    name: \"\",\n    price: \"\",\n    quantity: \"\"\n  })\n\n  if (fileName === \"\") {\n    disableName = true;\n  } else {\n    disableName = false;\n  }\n\n  useEffect(() => {\n    setPlaceholder(\"./images/placeholder-product.png\")\n  }, [imageLoader])\n\n  const fileChange = e => {\n    setFile(e.target.files[0]);\n    setPlaceholder(URL.createObjectURL(e.target.files[0]))\n    setFileName(e.target.files[0].name);\n  }\n\n  const onFormSubmit = e => {\n    e.preventDefault()\n    setImageLoader(true)\n    const formData = new FormData();\n\n    formData.append(\"file\", file);\n    formData.append(\"fileName\", fileName)\n    formData.append(\"name\", fields.name)\n    formData.append(\"price\", fields.price)\n    \n    console.log(\"formData\", formData)\n\n    newProduct(formData, localStorage.token)\n    .then(r => r.json())\n    .then(data => {\n      const { product } = data\n      // console.log(\"newProduct\", product)\n      dispatch({ type: ADD_PRODUCT, payload: product })\n      setImageLoader(false)\n    })\n  }\n\n    return (\n    <Container className=\"productForm\">\n      <div className=\"productForm__innerContainer\">\n        <Card>\n        {imageLoader ? \n          <Card.Content>\n            <Placeholder style={{margin: 5, height: 200, width: 250 }}>\n              <Placeholder.Image square />\n            </Placeholder>\n          </Card.Content> :\n          <Card.Content style={{height: \"100%\"}}>\n            <Image \n            as=\"label\"\n            htmlFor={`file-${formNumber}`}\n            src={`${placeholder}`} \n            size='big' \n            style={{margin: 5, height: 200, width: 250}}\n            />\n          </Card.Content>\n        }\n        </Card>\n        <div className=\"productForm__imageFields\">\n          <Form onSubmit={onFormSubmit}>\n            <Form.Field>\n              <input\n              name=\"file\"\n              type=\"file\"\n              id={`file-${formNumber}`}\n              accept=\"image/png, image/jpeg, image/jpg\"\n              hidden\n              onChange={fileChange}\n              />\n              <Form.Input\n              fluid\n              label=\"Image\"\n              placeholder=\"Image\"\n              readOnly\n              disabled={disableName}\n              value={fileName}\n              />\n              <Form.Input\n              name=\"name\"\n              fluid\n              label=\"Product Name\"\n              placeholder=\"Leather Shoes\"\n              onChange={handleFieldChange}\n              />\n            <Form.Group widths='equal'>\n              <Form.Input \n              name=\"price\"\n              fluid \n              label='Price' \n              placeholder=\"$39.99\" \n              onChange={handleFieldChange}\n              />\n              <Form.Input \n              name=\"quantity\"\n              fluid \n              label=\"Quantity\" \n              placeholder='2' \n              onChange={handleFieldChange}\n              />\n            </Form.Group>\n              <Button type=\"submit\" color=\"blue\" loading={imageLoader}>\n                Add New Product\n              </Button>    \n\n              <Button type=\"button\" color=\"red\" icon='cancel' onClick={click} />\n            </Form.Field>\n          </Form>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default ProductForm;\n","/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/store/Orders.js",[],"/Users/marlonbraga/Desktop/shopify/shopify-backend-assessment/shopify-frontend/src/components/orderItem/OrderItem.js",["114","115","116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":18,"column":26,"nodeType":"131","endLine":18,"endColumn":62},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"132","line":22,"column":6,"nodeType":"133","endLine":22,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":51,"column":13,"nodeType":"137","endLine":51,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":3,"column":1,"nodeType":"140","endLine":15,"endColumn":2},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":21},{"ruleId":"124","severity":1,"message":"141","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":23},{"ruleId":"124","severity":1,"message":"142","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":24},{"ruleId":"124","severity":1,"message":"143","line":6,"column":26,"nodeType":"126","messageId":"127","endLine":6,"endColumn":36},{"ruleId":"124","severity":1,"message":"144","line":14,"column":19,"nodeType":"126","messageId":"127","endLine":14,"endColumn":28},{"ruleId":"124","severity":1,"message":"145","line":18,"column":9,"nodeType":"126","messageId":"127","endLine":18,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":60,"column":13,"nodeType":"137","endLine":60,"endColumn":31},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'itemsPlurarization' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'deleteProduct' is defined but never used.","'REMOVE_PRODUCT' is defined but never used.","'SET_BANNER' is defined but never used.","'setLoader' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [products]",{"range":"151","text":"152"},[668,670],"[products]"]